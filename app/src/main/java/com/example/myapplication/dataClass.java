package com.example.myapplication;

import android.content.SharedPreferences;
import java.util.ArrayList;
import java.util.List;

public class dataClass {


    public ArrayList<lessonClass> createData() {
        String l1dec1 = "مقدمات جاوا و آشنایی";
        String l1dec2 = "جاوا چیست؟\n" +
                "هر فردی قبل از شروع یادگیری برنامه\u200Cنویسی کلمه جاوا را شنیده است. جاوا یک زبان برنامه\u200Cنویسی قدرتمند و شیءگرا می\u200Cباشد که در حال حاضر یکی از زبان\u200Cهای بسیار پرطرفدار در بین جامعه برنامه\u200Cنویسان است. برنامه\u200Cنویسان اندرویدی بیشتر از زبان جاوا برای برنامه\u200Cنویسی استفاده می\u200Cکنند.\n" +
                "\n" +
                "زبان جاوا از بسیاری ویژگی\u200Cهای زبان برنامه\u200Cنویسی C و ++C بهره برده است. از جمله مهم\u200Cترین ویژگی\u200Cهای زبان جاوا می\u200Cتوان به یادگیری آسان و سطح بالا بودن آن اشاره کرد که منجر به تولید برنامه\u200Cهای قدرتمند می\u200Cشود.\n" +
                "\n" +
                "قطعاً می\u200Cتوان گفت؛ هر فردی که بر زبان برنامه\u200Cنویسی جاوا مسلط باشد می\u200Cتواند با اکثر زبان\u200Cهای مختلف برنامه\u200Cنویسی کار کند! پس در یادگیری این زبان مصمم باشید و از همین امروز به کمک پست آموزش جاوا مقدماتی یادگیری را شروع کنید. برای آموزش\u200Cهای بیشتر و یادگیری با فیلم\u200Cهای آموزشی نیز می\u200Cتوانید به فرادرس مراجعه نمایید." ;

        String l1dec3 = "تا به اینجا با مقدمه آشنا شدیم و حالا بهتر است وارد مبحث برنامه‌نویسی شویم. حتماً می‌دانید که برای برنامه‌نویسی به یک محیط توسعه برنامه‌نویسی نیاز داریم. در این محیط ابزارهای لازم هر برنامه‌نویس برای کار کردن و تولید نرم‌افزار یا اپلیکیشن با زبان برنامه‌نویسی مورد نظر وجود دارد. این محیط توسعه، IDE نام دارد که مخفف Integrated Development Environment به معنای محیط توسعه‌ی یکپارچه است.\n\n"
                + "گام اول: انتخاب IDE و ایجاد پروژه\n"
                + "IDEهای مختلفی وجود دارند که هر کاربر بسته به راحتی کار از آن استفاده می‌کند. در این قسمت به معرفی چند IDE پرطرفدار می‌پردازیم که می‌توانید در آن با زبان برنامه‌نویسی جاوا کدنویسی کنید:\n\n"
                + "Eclipse: این محیط توسعه قابلیت پشتیبانی از بسیاری زبان‌ها نظیر Java ،Python ،PHP ،C++ ،C را دارد. این محیط توسعه قبل از ساخته شدن اندروید استودیو به عنوان محیط توسعه اصلی برای اپلیکیشن‌های اندرویدی به کار می‌رفت و در حال حاضر نیز از محبوبیت بالایی برخوردار است. در این آموزش ما از محیط توسعه اکلیپس استفاده خواهیم کرد.\n\n"
                + "Android Studio: اندروید یک محیط توسعه شرکت گوگل می‌باشد که از دو زبان جاوا و کاتلین پشتیبانی می‌کند و اکثر برنامه‌نویسان اندروید که با زبان جاوا کار می‌کنند از این IDE استفاده میکنند.";

        String l2dec1 = "مفاهیم اولیه در جاوا";

        String l2dec2 = "تا به اینجا با مقدمه آشنا شدیم و حالا بهتر است وارد مبحث برنامه‌نویسی شویم. حتماً می‌دانید که برای برنامه‌نویسی به یک محیط توسعه برنامه‌نویسی نیاز داریم. در این محیط ابزارهای لازم هر برنامه‌نویس برای کار کردن و تولید نرم‌افزار یا اپلیکیشن با زبان برنامه‌نویسی مورد نظر وجود دارد. این محیط توسعه، IDE نام دارد که مخفف Integrated Development Environment به معنای محیط توسعه‌ی یکپارچه است.\n\n"
                + "گام اول: انتخاب IDE و ایجاد پروژه\n"
                + "IDEهای مختلفی وجود دارند که هر کاربر بسته به راحتی کار از آن استفاده می‌کند. در این قسمت به معرفی چند IDE پرطرفدار می‌پردازیم که می‌توانید در آن با زبان برنامه‌نویسی جاوا کدنویسی کنید:\n\n"
                + "Eclipse: این محیط توسعه قابلیت پشتیبانی از بسیاری زبان‌ها نظیر Java ،Python ،PHP ،C++ ،C را دارد. این محیط توسعه قبل از ساخته شدن اندروید استودیو به عنوان محیط توسعه اصلی برای اپلیکیشن‌های اندرویدی به کار می‌رفت و در حال حاضر نیز از محبوبیت بالایی برخوردار است. در این آموزش ما از محیط توسعه اکلیپس استفاده خواهیم کرد.\n\n"
                + "Android Studio: اندروید یک محیط توسعه شرکت گوگل می‌باشد که از دو زبان جاوا و کاتلین پشتیبانی می‌کند و اکثر برنامه‌نویسان اندروید که با زبان جاوا کار می‌کنند از این IDE استفاده میکنند.";

        String l2dec3 = "متغیرها در جاوا\n" +
                "در زبان برنامه‌نویسی جاوا نیز همانند دیگر زبان‌ها می‌توانید متغیر تعریف کنید و داده‌های خود را در آن ذخیره کنید. از بین انواع داده شما می‌توانید از داده‌های زیر در تعریف متغیر استفاده نمایید:\n" +
                "\n" +
                "String: متغیری است که رشته را در خود ذخیره می‌کند. هنگام مقداردهی به این متغیر باید داده خود را داخل دو کاراکتر ” ” (کوتیشن مارک) بنویسیم.\n" +
                "int: قابلیت ذخیره اعداد را در خود دارد. این اعداد تنها شامل اعداد صحیح (مثبت و منفی) می‌باشند.\n" +
                "float: این نوع متغیر اعداد اعشاری را در خود ذخیره می‌کند.\n" +
                "char: این متغیر کاراکترها را در خود ذخیره می‌کند. هنگام مقداردهی به این متغیر باید داده خود را داخل دو کاراکتر ‘ ‘ (تک کوتیشن مارک) بنویسیم.\n" +
                "boolean: این نوع متغیر داده‌های منطقی را در خود ذخیره می‌کند که می‌تواند دارای دو مقدار true یا false باشد.\n" +
                "تعریف متغیر در جاوا\n" +
                "برای تعریف کردن متغیر ابتدا باید نوع داده را نوشته سپس یک نام برای متغیر خود انتخاب کنیم. در ادامه یک کاراکتر = (مساوی) گذاشته و مقدار خود را می‌نویسیم. در نهایت با گذاشتن یک کاراکتر ; (سمیکالن) انتهای دستور را اعلام می‌کنیم.برای مثال:\n" +
                "String firstname = \"amin\";";

        String l3dec1 = "ورودی ها در جاوا";
        String l3dec2= "گرفتن ورودی در جاوا\n" +
                "در برنامه‌هایی که با جاوا نوشته می‌شوند امکان گرفتن داده از ورودی نیز وجود دارد. بدین صورت که کاربر باید با توجه به نوع متغیر، داده متناسب با آن را وارد نماید. برای اینکه به جاوا اعلام کنیم می‌خواهیم یک ورودی بگیریم، ابتدا باید پکیج java.util را به پروژه اضافه کنیم. برای این کار دستور زیر را به خط دوم برنامه (یعنی بعد از نام پروژه) اضافه کنید:\n" +
                "import java.util.Scanner;\n" +
                "حال باید شیء Scanner را ایجاد کنیم تا کاربر بتواند داده خود را وارد کند. دستور زیر را در داخل بخش main وارد کنید، نام شیء را myinput در نظر گرفته‌ایم. برای زیبایی کار یک پیغام قبل از وارد کردن ورودی می‌نویسیم. برای مثال:\n" +
                "Scanner myinput = new Scanner(System.in);\n" +
                "یک داده باید در فضایی ذخیره شود تا بتوان آن را نمایش داد. در این جا ما نوع ورودی را رشته در نظر می‌گیریم. بنابراین باید ابتدا یک متغیر تعریف کنیم و سپس با دستور ()nextLine ورودی را در داخل متغیر ذخیره کنیم. دستورات زیر را در ادامه بنویسید:\n" +
                "String username = myinput.nextLine();";



        String l3dec3 ="انواع ورودی در جاوا\n" +
                "در جاوا می‌توان انواع مختلفی از داده را از ورودی گرفت و در متغیر ذخیره کرد. در مثال بالا از نوع ()nextLine برای ذخیره رشته در متغیر استفاده کردیم. جدول زیر انواع ورودی را در جاوا توضیح می‌دهد:\n" +
                "()nextBoolean نوع داده boolean را از ورودی گرفته و در متغیر ذخیره می‌کند.\n" +
                "()nextByte نوع داده byte را از ورودی گرفته و در متغیر ذخیره می‌کند.\n" +
                "()nextDouble نوع داده double را از ورودی گرفته و در متغیر ذخیره می‌کند.\n" +
                "()nextFloat نوع داده float را از ورودی گرفته و در متغیر ذخیره می‌کند.\n" +
                "()nextInt نوع داده int را از ورودی گرفته و در متغیر ذخیره می‌کند.\n" +
                "()nextLine نوع داده String را از ورودی گرفته و در متغیر ذخیره می‌کند.\n" +
                "()nextLong نوع داده long را از ورودی گرفته و در متغیر ذخیره می‌کند.\n" +
                "()nextShort نوع داده short را از ورودی گرفته و در متغیر ذخیره می‌کند.";

        String l4dec1 ="شرط و حلقه در جاوا";

        String l4dec2 =   "(شرط در جاوا\n" +
                "برای ایجاد شرط در جاوا، همانند دیگر زبان‌های برنامه نویسی از دستور if استفاده می‌کنیم. در ساختار دستور شرطی، ابتدا کلمه کلیدی if را می‌نویسیم و سپس داخل پارانتز شرط خود را تعیین می‌کنیم. پس از تعیین کردن شرط، داخل دو کاراکتر { } (آکولاد) دستوراتی که می‌خواهیم درصورت درست بودن شرط اجرا شود می‌نویسیم.\n" +
                "\n" +
                "برای مثال می‌خواهیم یک برنامه بنویسیم که عددی را از ورودی بگیرد، چنانچه عدد زوج باشد پیغام “even” و چنانچه عدد فرد باشد پیغام “odd” چاپ شود. برای نوشتن این برنامه همانند گام چهارم آموزش جاوا مقدماتی باید پکیج java.util را به پروژه اضافه کنیم. سپس یک متغیر از نوع int تعریف می‌کنیم تا عدد وارد شده در آن ذخیره گردد. دستورات زیر را در بخش main بنویسید:\n" +
                "System.out.print(\"Enter number: \");\n" +
                "Scanner mynumber = new Scanner(System.in);\n" +
                "int n;\n" +
                "n = mynumber.nextInt();\n" +
                "\n" +
                "برای دانستن زوج یا منفی بودن عدد، باید آن را بر 2 تقسیم کنیم. اگر باقی‌مانده برابر با 0 باشد عدد زوج است؛ در غیر این صورت عدد منفی می‌باشد. دستورات زیر را به برنامه اضافه کنید:\n" +
                "if (n%2==0)\n" +
                "{\n" +
                "     System.out.println(\"even\");\n" +
                "}\n" +
                "else\n" +
                "{\n" +
                "     System.out.println(\"odd\");\n" +
                "}\n" +
                ")";

        String l4dec3 = "حلقه در جاوا\nمی‌خواهیم یک برنامه بنویسیم که کاربر 5 عدد را در ورودی وارد نماید و سپس جمع و میانگین اعداد نمایش داده شود. در حالت عادی برای این کار باید چند متغیر از نوع int تعریف کنیم و سپس با استفاده از عملیات راضی بر روی آن، جمع و میانگین را به دست آوریم. در نهایت با یک دستور print خروجی را چاپ کنیم. اما اگر تعداد ورودی‌ها بیشتر باشد چه؟ در این صورت نیاز داریم از حلقه‌ای به نام for استفاده نماییم.\n\nدر حلقه یک دستوری را می‌نویسیم و به تعداد مشخص تعیین می‌کنیم که این دستور چند بار تکرار شود. بدین ترتیب از نوشتن تکراری دستورات جلوگیری می‌شود.\n\nبرای نوشتن این برنامه همانند گام چهارم آموزش جاوا مقدماتی باید پکیج java.util را به پروژه اضافه کنیم. سپس یک متغیر از نوع int تعریف می‌کنیم که در حلقه for مورد استفاده قرار خواهد گرفت. همچنین دو متغیر از نوع float برای گرفتن اعداد اعشاری از ورودی تعریف می‌کنیم (زیرا می‌خواهیم قابلیت وارد کردن عدد اعشاری نیز وجود داشته باشد) پس دستورات زیر را در بخش main بنویسید:\nint i;\nfloat n,sum=0;\n\nبرای تعریف کردن یک حلقه for، ابتدا کلمه کلیدی for را می‌نویسیم و سپس داخل پارانتز مقادیر و شرایط اجرای کد را تعریف می‌کنیم. پس از تعریف کردن حلقه، داخل دو کاراکتر { } (آکولاد) دستوراتی که می‌خواهیم به تعداد مشخصی تکرار شوند می‌نویسیم.\n\nدر این برنامه ما می‌خواهیم که یک پیغام به همراه ورودی 5 بار تکرار شود و به ازای هر بار ورودی که وارد می‌شود، داده‌ها در یک متغیری به نام sum جمع شوند. برای این کار دستورات زیر را در ادامه بنویسید:\nfor(i=1;i<=5;i++)\n{\n     System.out.print(\"Enter number: \");\n     Scanner mynumber = new Scanner(System.in);\n     n = mynumber.nextFloat();\n     sum=sum+n;\n}\n\nدر نهایت تنها کاری که باید انجام دهیم این است که متغیر sum را بر تعداد یعنی 5 تقسیم کنیم و خروجی به دست آمده را چاپ کنیم. دستورات زیر را به برنامه اضافه کنید:\nsum=sum/5;\nSystem.out.println(\"avg is: \" + sum;";


        String l5dec1 = "آرایه ها و سخن آخر";

        String l5dec2 = "(ابتدا بهتر است بدانیم آرایه چیست؟ آرایه نوعی متغیر است که قابلیت ذخیره تعداد بیشتری از داده‌ها را در خود دارد. برخلاف متغیرها، که در صورت اضافه شدن داده جدید با داده‌های قبلی جایگزین می‌شوند، آرایه می‌تواند تعداد بیشتری داده را در خود ذخیره نماید. شماره خانه‌های هر آرایه با اندیس مشخص شده و از شماره 0 شروع می‌شود. برای مثال می‌خواهیم برنامه‌ای بنویسیم که مجموع مقادیر موجود در آرایه را در خروجی چاپ کند. برای این کار ابتدا باید یک آرایه تعریف کرده و آن را مقداردهی کنیم. برای تعریف کردن آرایه ابتدا نوع آرایه را می‌نویسیم و سپس دو کاراکتر [ ] (براکت بدون فاصله!) گذاشته و نام آرایه را می‌نویسیم. سپس برای مقدار دهی یک کاراکتر = (مساوی) گذاشته و داخل دو کاراکتر { } (آکولاد) مقادیر خود را می‌نویسیم. مقدارها با کاراکتر , (کاما انگلیسی) از هم جدا می‌شوند. درنهایت با کاراکتر ; (سمیکالن) پایان دستور را مشخص می‌کنیم. دستور زیر را در بخش main بنویسید: int [] n = {20,15,16,20,19}; حال باید برای جمع کردن مقادیر داخل آرایه از حلقه for استفاده کنیم. دو متغیر به نام‌های i و sum از نوع int تعریف می‌کنیم و حلقه for را ایجاد می‌کنیم. داخل حلقه در بخش شرایط اجرای کد، از متد length استفاده می‌کنیم تا طول آرایه را به دست آوریم؛ چون می‌خواهیم حلقه به تعداد مقادیر موجود در آرایه تکرار شود. در نهایت با یک دستور print جمع مقادیر را چاپ می‌کنیم. دستورات زیر را به برنامه خود اضافه کنید: int i,sum=0; for(i=0;i<n.length;i++) { sum=sum+n[i]; } System.out.print(\"sum is: \"+sum);)";

        String l5dec3 ="به انتهای آموزش جاوا مقدماتی رسیدیم. در این آموزش به معرفی چند IDE که از زبان جاوا پشتیبانی می‌کنند پرداختیم. همانطور که در ابتدا گفتیم بیشتر برنامه‌نویسان اندروید از زبان جاوا برای برنامه‌نویسی استفاده می‌کنند. یادگیری زبان جاوا بسیار آسان است و اصلا نیاز نیست نگرانی بابت یادگیری این زبان قدرتمند داشته باشید. تنها تلاش و پشتکار و دید برنامه‌نویسی نیاز دارید تا بتوانید این زبان را فرا بگیرید.";







        lessonClass lesson1 = new lessonClass(1,"درس 1", false, l1dec1, l1dec2,l1dec3,R.mipmap.pic1, R.raw.vid1);
        lessonClass lesson2 = new lessonClass(2,"درس 2", false, l2dec1,  l2dec2,l2dec3,R.mipmap.pic2, R.raw.vid1);
        lessonClass lesson3 = new lessonClass(3,"درس 3", false, l3dec1,l3dec2,l3dec3,R.mipmap.pic3, R.raw.vid1);

        lessonClass lesson4 = new lessonClass(4,"درس 4",false,l4dec1,l4dec2,l4dec3,R.mipmap.pic4,R.raw.vid1);
        lessonClass lesson5 = new lessonClass(5,"درس5",false,l5dec1,l5dec2,l5dec3,R.mipmap.pic5,R.raw.vid1);

        ArrayList<lessonClass> lessons = new ArrayList<>();
        lessons.add(lesson1);
        lessons.add(lesson2);
        lessons.add(lesson3);
        lessons.add(lesson4);
        lessons.add(lesson5);
        return lessons;

    }
}

